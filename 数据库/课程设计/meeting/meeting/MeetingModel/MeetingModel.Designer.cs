//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MeetingModel", "FK__accompany__2D27B809", "attend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingModel.attend), "accompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.accompany), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__accompany__h_nam__2F10007B", "Hotel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MeetingModel.Hotel), "accompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.accompany), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__Admin__dept_id__145C0A3F", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MeetingModel.Department), "Admin", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.Admin), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__attend__h_name__267ABA7A", "Hotel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MeetingModel.Hotel), "attend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.attend), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__attend__m_id__25869641", "Meeting", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingModel.Meeting), "attend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.attend), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__attend__particip__24927208", "Orduser", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingModel.Orduser), "attend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.attend), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__Meeting__dept_id__1CF15040", "Department", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MeetingModel.Department), "Meeting", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.Meeting), true)]
[assembly: EdmRelationshipAttribute("MeetingModel", "FK__agenda__m_id__1FCDBCEB", "Meeting", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MeetingModel.Meeting), "agenda", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingModel.agenda), true)]

#endregion

namespace MeetingModel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class MeetingModelContainer : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“MeetingModelContainer”部分中的连接字符串初始化新 MeetingModelContainer 对象。
        /// </summary>
        public MeetingModelContainer() : base("name=MeetingModelContainer", "MeetingModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MeetingModelContainer 对象。
        /// </summary>
        public MeetingModelContainer(string connectionString) : base(connectionString, "MeetingModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MeetingModelContainer 对象。
        /// </summary>
        public MeetingModelContainer(EntityConnection connection) : base(connection, "MeetingModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<accompany> accompany
        {
            get
            {
                if ((_accompany == null))
                {
                    _accompany = base.CreateObjectSet<accompany>("accompany");
                }
                return _accompany;
            }
        }
        private ObjectSet<accompany> _accompany;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Admin> Admin
        {
            get
            {
                if ((_Admin == null))
                {
                    _Admin = base.CreateObjectSet<Admin>("Admin");
                }
                return _Admin;
            }
        }
        private ObjectSet<Admin> _Admin;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<attend> attend
        {
            get
            {
                if ((_attend == null))
                {
                    _attend = base.CreateObjectSet<attend>("attend");
                }
                return _attend;
            }
        }
        private ObjectSet<attend> _attend;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Department> Department
        {
            get
            {
                if ((_Department == null))
                {
                    _Department = base.CreateObjectSet<Department>("Department");
                }
                return _Department;
            }
        }
        private ObjectSet<Department> _Department;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Hotel> Hotel
        {
            get
            {
                if ((_Hotel == null))
                {
                    _Hotel = base.CreateObjectSet<Hotel>("Hotel");
                }
                return _Hotel;
            }
        }
        private ObjectSet<Hotel> _Hotel;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Meeting> Meeting
        {
            get
            {
                if ((_Meeting == null))
                {
                    _Meeting = base.CreateObjectSet<Meeting>("Meeting");
                }
                return _Meeting;
            }
        }
        private ObjectSet<Meeting> _Meeting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Orduser> Orduser
        {
            get
            {
                if ((_Orduser == null))
                {
                    _Orduser = base.CreateObjectSet<Orduser>("Orduser");
                }
                return _Orduser;
            }
        }
        private ObjectSet<Orduser> _Orduser;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Supadmin> Supadmin
        {
            get
            {
                if ((_Supadmin == null))
                {
                    _Supadmin = base.CreateObjectSet<Supadmin>("Supadmin");
                }
                return _Supadmin;
            }
        }
        private ObjectSet<Supadmin> _Supadmin;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<agenda> agenda
        {
            get
            {
                if ((_agenda == null))
                {
                    _agenda = base.CreateObjectSet<agenda>("agenda");
                }
                return _agenda;
            }
        }
        private ObjectSet<agenda> _agenda;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 accompany EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToaccompany(accompany accompany)
        {
            base.AddObject("accompany", accompany);
        }
    
        /// <summary>
        /// 用于向 Admin EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAdmin(Admin admin)
        {
            base.AddObject("Admin", admin);
        }
    
        /// <summary>
        /// 用于向 attend EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToattend(attend attend)
        {
            base.AddObject("attend", attend);
        }
    
        /// <summary>
        /// 用于向 Department EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDepartment(Department department)
        {
            base.AddObject("Department", department);
        }
    
        /// <summary>
        /// 用于向 Hotel EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToHotel(Hotel hotel)
        {
            base.AddObject("Hotel", hotel);
        }
    
        /// <summary>
        /// 用于向 Meeting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMeeting(Meeting meeting)
        {
            base.AddObject("Meeting", meeting);
        }
    
        /// <summary>
        /// 用于向 Orduser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrduser(Orduser orduser)
        {
            base.AddObject("Orduser", orduser);
        }
    
        /// <summary>
        /// 用于向 Supadmin EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSupadmin(Supadmin supadmin)
        {
            base.AddObject("Supadmin", supadmin);
        }
    
        /// <summary>
        /// 用于向 agenda EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToagenda(agenda agenda)
        {
            base.AddObject("agenda", agenda);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="accompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accompany : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 accompany 对象。
        /// </summary>
        /// <param name="participator_id">participator_id 属性的初始值。</param>
        /// <param name="m_id">m_id 属性的初始值。</param>
        /// <param name="re_id">re_id 属性的初始值。</param>
        /// <param name="roomnumber">roomnumber 属性的初始值。</param>
        public static accompany Createaccompany(global::System.Int32 participator_id, global::System.Int32 m_id, global::System.Int32 re_id, global::System.Int32 roomnumber)
        {
            accompany accompany = new accompany();
            accompany.participator_id = participator_id;
            accompany.m_id = m_id;
            accompany.re_id = re_id;
            accompany.roomnumber = roomnumber;
            return accompany;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 participator_id
        {
            get
            {
                return _participator_id;
            }
            set
            {
                if (_participator_id != value)
                {
                    Onparticipator_idChanging(value);
                    ReportPropertyChanging("participator_id");
                    _participator_id = StructuralObject.SetValidValue(value, "participator_id");
                    ReportPropertyChanged("participator_id");
                    Onparticipator_idChanged();
                }
            }
        }
        private global::System.Int32 _participator_id;
        partial void Onparticipator_idChanging(global::System.Int32 value);
        partial void Onparticipator_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 m_id
        {
            get
            {
                return _m_id;
            }
            set
            {
                if (_m_id != value)
                {
                    Onm_idChanging(value);
                    ReportPropertyChanging("m_id");
                    _m_id = StructuralObject.SetValidValue(value, "m_id");
                    ReportPropertyChanged("m_id");
                    Onm_idChanged();
                }
            }
        }
        private global::System.Int32 _m_id;
        partial void Onm_idChanging(global::System.Int32 value);
        partial void Onm_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 re_id
        {
            get
            {
                return _re_id;
            }
            set
            {
                if (_re_id != value)
                {
                    Onre_idChanging(value);
                    ReportPropertyChanging("re_id");
                    _re_id = StructuralObject.SetValidValue(value, "re_id");
                    ReportPropertyChanged("re_id");
                    Onre_idChanged();
                }
            }
        }
        private global::System.Int32 _re_id;
        partial void Onre_idChanging(global::System.Int32 value);
        partial void Onre_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String h_name
        {
            get
            {
                return _h_name;
            }
            set
            {
                Onh_nameChanging(value);
                ReportPropertyChanging("h_name");
                _h_name = StructuralObject.SetValidValue(value, true, "h_name");
                ReportPropertyChanged("h_name");
                Onh_nameChanged();
            }
        }
        private global::System.String _h_name;
        partial void Onh_nameChanging(global::System.String value);
        partial void Onh_nameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roomnumber
        {
            get
            {
                return _roomnumber;
            }
            set
            {
                OnroomnumberChanging(value);
                ReportPropertyChanging("roomnumber");
                _roomnumber = StructuralObject.SetValidValue(value, "roomnumber");
                ReportPropertyChanged("roomnumber");
                OnroomnumberChanged();
            }
        }
        private global::System.Int32 _roomnumber;
        partial void OnroomnumberChanging(global::System.Int32 value);
        partial void OnroomnumberChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__accompany__2D27B809", "attend")]
        public attend attend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<attend>("MeetingModel.FK__accompany__2D27B809", "attend").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<attend>("MeetingModel.FK__accompany__2D27B809", "attend").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<attend> attendReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<attend>("MeetingModel.FK__accompany__2D27B809", "attend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<attend>("MeetingModel.FK__accompany__2D27B809", "attend", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__accompany__h_nam__2F10007B", "Hotel")]
        public Hotel Hotel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hotel>("MeetingModel.FK__accompany__h_nam__2F10007B", "Hotel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hotel>("MeetingModel.FK__accompany__h_nam__2F10007B", "Hotel").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hotel> HotelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hotel>("MeetingModel.FK__accompany__h_nam__2F10007B", "Hotel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hotel>("MeetingModel.FK__accompany__h_nam__2F10007B", "Hotel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="Admin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Admin : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Admin 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="psw">psw 属性的初始值。</param>
        public static Admin CreateAdmin(global::System.Int32 id, global::System.String psw)
        {
            Admin admin = new Admin();
            admin.id = id;
            admin.psw = psw;
            return admin;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String psw
        {
            get
            {
                return _psw;
            }
            set
            {
                OnpswChanging(value);
                ReportPropertyChanging("psw");
                _psw = StructuralObject.SetValidValue(value, false, "psw");
                ReportPropertyChanged("psw");
                OnpswChanged();
            }
        }
        private global::System.String _psw;
        partial void OnpswChanging(global::System.String value);
        partial void OnpswChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dept_id
        {
            get
            {
                return _dept_id;
            }
            set
            {
                Ondept_idChanging(value);
                ReportPropertyChanging("dept_id");
                _dept_id = StructuralObject.SetValidValue(value, true, "dept_id");
                ReportPropertyChanged("dept_id");
                Ondept_idChanged();
            }
        }
        private global::System.String _dept_id;
        partial void Ondept_idChanging(global::System.String value);
        partial void Ondept_idChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__Admin__dept_id__145C0A3F", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("MeetingModel.FK__Admin__dept_id__145C0A3F", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("MeetingModel.FK__Admin__dept_id__145C0A3F", "Department").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("MeetingModel.FK__Admin__dept_id__145C0A3F", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("MeetingModel.FK__Admin__dept_id__145C0A3F", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="agenda")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class agenda : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 agenda 对象。
        /// </summary>
        /// <param name="agenda_number">agenda_number 属性的初始值。</param>
        public static agenda Createagenda(global::System.Int32 agenda_number)
        {
            agenda agenda = new agenda();
            agenda.agenda_number = agenda_number;
            return agenda;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> m_id
        {
            get
            {
                return _m_id;
            }
            set
            {
                Onm_idChanging(value);
                ReportPropertyChanging("m_id");
                _m_id = StructuralObject.SetValidValue(value, "m_id");
                ReportPropertyChanged("m_id");
                Onm_idChanged();
            }
        }
        private Nullable<global::System.Int32> _m_id;
        partial void Onm_idChanging(Nullable<global::System.Int32> value);
        partial void Onm_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String detail
        {
            get
            {
                return _detail;
            }
            set
            {
                OndetailChanging(value);
                ReportPropertyChanging("detail");
                _detail = StructuralObject.SetValidValue(value, true, "detail");
                ReportPropertyChanged("detail");
                OndetailChanged();
            }
        }
        private global::System.String _detail;
        partial void OndetailChanging(global::System.String value);
        partial void OndetailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> starttime
        {
            get
            {
                return _starttime;
            }
            set
            {
                OnstarttimeChanging(value);
                ReportPropertyChanging("starttime");
                _starttime = StructuralObject.SetValidValue(value, "starttime");
                ReportPropertyChanged("starttime");
                OnstarttimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _starttime;
        partial void OnstarttimeChanging(Nullable<global::System.DateTime> value);
        partial void OnstarttimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endtime
        {
            get
            {
                return _endtime;
            }
            set
            {
                OnendtimeChanging(value);
                ReportPropertyChanging("endtime");
                _endtime = StructuralObject.SetValidValue(value, "endtime");
                ReportPropertyChanged("endtime");
                OnendtimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _endtime;
        partial void OnendtimeChanging(Nullable<global::System.DateTime> value);
        partial void OnendtimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 agenda_number
        {
            get
            {
                return _agenda_number;
            }
            set
            {
                if (_agenda_number != value)
                {
                    Onagenda_numberChanging(value);
                    ReportPropertyChanging("agenda_number");
                    _agenda_number = StructuralObject.SetValidValue(value, "agenda_number");
                    ReportPropertyChanged("agenda_number");
                    Onagenda_numberChanged();
                }
            }
        }
        private global::System.Int32 _agenda_number;
        partial void Onagenda_numberChanging(global::System.Int32 value);
        partial void Onagenda_numberChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__agenda__m_id__1FCDBCEB", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("MeetingModel.FK__agenda__m_id__1FCDBCEB", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("MeetingModel.FK__agenda__m_id__1FCDBCEB", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("MeetingModel.FK__agenda__m_id__1FCDBCEB", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("MeetingModel.FK__agenda__m_id__1FCDBCEB", "Meeting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="attend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class attend : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 attend 对象。
        /// </summary>
        /// <param name="participator_id">participator_id 属性的初始值。</param>
        /// <param name="m_id">m_id 属性的初始值。</param>
        public static attend Createattend(global::System.Int32 participator_id, global::System.Int32 m_id)
        {
            attend attend = new attend();
            attend.participator_id = participator_id;
            attend.m_id = m_id;
            return attend;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 participator_id
        {
            get
            {
                return _participator_id;
            }
            set
            {
                if (_participator_id != value)
                {
                    Onparticipator_idChanging(value);
                    ReportPropertyChanging("participator_id");
                    _participator_id = StructuralObject.SetValidValue(value, "participator_id");
                    ReportPropertyChanged("participator_id");
                    Onparticipator_idChanged();
                }
            }
        }
        private global::System.Int32 _participator_id;
        partial void Onparticipator_idChanging(global::System.Int32 value);
        partial void Onparticipator_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 m_id
        {
            get
            {
                return _m_id;
            }
            set
            {
                if (_m_id != value)
                {
                    Onm_idChanging(value);
                    ReportPropertyChanging("m_id");
                    _m_id = StructuralObject.SetValidValue(value, "m_id");
                    ReportPropertyChanged("m_id");
                    Onm_idChanged();
                }
            }
        }
        private global::System.Int32 _m_id;
        partial void Onm_idChanging(global::System.Int32 value);
        partial void Onm_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> arrive_date
        {
            get
            {
                return _arrive_date;
            }
            set
            {
                Onarrive_dateChanging(value);
                ReportPropertyChanging("arrive_date");
                _arrive_date = StructuralObject.SetValidValue(value, "arrive_date");
                ReportPropertyChanged("arrive_date");
                Onarrive_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _arrive_date;
        partial void Onarrive_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onarrive_dateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String arrive_way
        {
            get
            {
                return _arrive_way;
            }
            set
            {
                Onarrive_wayChanging(value);
                ReportPropertyChanging("arrive_way");
                _arrive_way = StructuralObject.SetValidValue(value, true, "arrive_way");
                ReportPropertyChanged("arrive_way");
                Onarrive_wayChanged();
            }
        }
        private global::System.String _arrive_way;
        partial void Onarrive_wayChanging(global::System.String value);
        partial void Onarrive_wayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> leave_date
        {
            get
            {
                return _leave_date;
            }
            set
            {
                Onleave_dateChanging(value);
                ReportPropertyChanging("leave_date");
                _leave_date = StructuralObject.SetValidValue(value, "leave_date");
                ReportPropertyChanged("leave_date");
                Onleave_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _leave_date;
        partial void Onleave_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onleave_dateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String leave_way
        {
            get
            {
                return _leave_way;
            }
            set
            {
                Onleave_wayChanging(value);
                ReportPropertyChanging("leave_way");
                _leave_way = StructuralObject.SetValidValue(value, true, "leave_way");
                ReportPropertyChanged("leave_way");
                Onleave_wayChanged();
            }
        }
        private global::System.String _leave_way;
        partial void Onleave_wayChanging(global::System.String value);
        partial void Onleave_wayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String h_name
        {
            get
            {
                return _h_name;
            }
            set
            {
                Onh_nameChanging(value);
                ReportPropertyChanging("h_name");
                _h_name = StructuralObject.SetValidValue(value, true, "h_name");
                ReportPropertyChanged("h_name");
                Onh_nameChanged();
            }
        }
        private global::System.String _h_name;
        partial void Onh_nameChanging(global::System.String value);
        partial void Onh_nameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> room_number
        {
            get
            {
                return _room_number;
            }
            set
            {
                Onroom_numberChanging(value);
                ReportPropertyChanging("room_number");
                _room_number = StructuralObject.SetValidValue(value, "room_number");
                ReportPropertyChanged("room_number");
                Onroom_numberChanged();
            }
        }
        private Nullable<global::System.Int32> _room_number;
        partial void Onroom_numberChanging(Nullable<global::System.Int32> value);
        partial void Onroom_numberChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__accompany__2D27B809", "accompany")]
        public EntityCollection<accompany> accompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accompany>("MeetingModel.FK__accompany__2D27B809", "accompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accompany>("MeetingModel.FK__accompany__2D27B809", "accompany", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__attend__h_name__267ABA7A", "Hotel")]
        public Hotel Hotel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hotel>("MeetingModel.FK__attend__h_name__267ABA7A", "Hotel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hotel>("MeetingModel.FK__attend__h_name__267ABA7A", "Hotel").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hotel> HotelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hotel>("MeetingModel.FK__attend__h_name__267ABA7A", "Hotel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hotel>("MeetingModel.FK__attend__h_name__267ABA7A", "Hotel", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__attend__m_id__25869641", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("MeetingModel.FK__attend__m_id__25869641", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("MeetingModel.FK__attend__m_id__25869641", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("MeetingModel.FK__attend__m_id__25869641", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("MeetingModel.FK__attend__m_id__25869641", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__attend__particip__24927208", "Orduser")]
        public Orduser Orduser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orduser>("MeetingModel.FK__attend__particip__24927208", "Orduser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orduser>("MeetingModel.FK__attend__particip__24927208", "Orduser").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Orduser> OrduserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orduser>("MeetingModel.FK__attend__particip__24927208", "Orduser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Orduser>("MeetingModel.FK__attend__particip__24927208", "Orduser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Department 对象。
        /// </summary>
        /// <param name="dept_id">dept_id 属性的初始值。</param>
        public static Department CreateDepartment(global::System.String dept_id)
        {
            Department department = new Department();
            department.dept_id = dept_id;
            return department;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dept_id
        {
            get
            {
                return _dept_id;
            }
            set
            {
                if (_dept_id != value)
                {
                    Ondept_idChanging(value);
                    ReportPropertyChanging("dept_id");
                    _dept_id = StructuralObject.SetValidValue(value, false, "dept_id");
                    ReportPropertyChanged("dept_id");
                    Ondept_idChanged();
                }
            }
        }
        private global::System.String _dept_id;
        partial void Ondept_idChanging(global::System.String value);
        partial void Ondept_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dept_name
        {
            get
            {
                return _dept_name;
            }
            set
            {
                Ondept_nameChanging(value);
                ReportPropertyChanging("dept_name");
                _dept_name = StructuralObject.SetValidValue(value, true, "dept_name");
                ReportPropertyChanged("dept_name");
                Ondept_nameChanged();
            }
        }
        private global::System.String _dept_name;
        partial void Ondept_nameChanging(global::System.String value);
        partial void Ondept_nameChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__Admin__dept_id__145C0A3F", "Admin")]
        public EntityCollection<Admin> Admin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admin>("MeetingModel.FK__Admin__dept_id__145C0A3F", "Admin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admin>("MeetingModel.FK__Admin__dept_id__145C0A3F", "Admin", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__Meeting__dept_id__1CF15040", "Meeting")]
        public EntityCollection<Meeting> Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Meeting>("MeetingModel.FK__Meeting__dept_id__1CF15040", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Meeting>("MeetingModel.FK__Meeting__dept_id__1CF15040", "Meeting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="Hotel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hotel : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Hotel 对象。
        /// </summary>
        /// <param name="h_name">h_name 属性的初始值。</param>
        /// <param name="h_street">h_street 属性的初始值。</param>
        public static Hotel CreateHotel(global::System.String h_name, global::System.String h_street)
        {
            Hotel hotel = new Hotel();
            hotel.h_name = h_name;
            hotel.h_street = h_street;
            return hotel;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String h_name
        {
            get
            {
                return _h_name;
            }
            set
            {
                if (_h_name != value)
                {
                    Onh_nameChanging(value);
                    ReportPropertyChanging("h_name");
                    _h_name = StructuralObject.SetValidValue(value, false, "h_name");
                    ReportPropertyChanged("h_name");
                    Onh_nameChanged();
                }
            }
        }
        private global::System.String _h_name;
        partial void Onh_nameChanging(global::System.String value);
        partial void Onh_nameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String h_street
        {
            get
            {
                return _h_street;
            }
            set
            {
                Onh_streetChanging(value);
                ReportPropertyChanging("h_street");
                _h_street = StructuralObject.SetValidValue(value, false, "h_street");
                ReportPropertyChanged("h_street");
                Onh_streetChanged();
            }
        }
        private global::System.String _h_street;
        partial void Onh_streetChanging(global::System.String value);
        partial void Onh_streetChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> h_number
        {
            get
            {
                return _h_number;
            }
            set
            {
                Onh_numberChanging(value);
                ReportPropertyChanging("h_number");
                _h_number = StructuralObject.SetValidValue(value, "h_number");
                ReportPropertyChanged("h_number");
                Onh_numberChanged();
            }
        }
        private Nullable<global::System.Int32> _h_number;
        partial void Onh_numberChanging(Nullable<global::System.Int32> value);
        partial void Onh_numberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone_number
        {
            get
            {
                return _phone_number;
            }
            set
            {
                Onphone_numberChanging(value);
                ReportPropertyChanging("phone_number");
                _phone_number = StructuralObject.SetValidValue(value, true, "phone_number");
                ReportPropertyChanged("phone_number");
                Onphone_numberChanged();
            }
        }
        private global::System.String _phone_number;
        partial void Onphone_numberChanging(global::System.String value);
        partial void Onphone_numberChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__accompany__h_nam__2F10007B", "accompany")]
        public EntityCollection<accompany> accompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<accompany>("MeetingModel.FK__accompany__h_nam__2F10007B", "accompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<accompany>("MeetingModel.FK__accompany__h_nam__2F10007B", "accompany", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__attend__h_name__267ABA7A", "attend")]
        public EntityCollection<attend> attend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<attend>("MeetingModel.FK__attend__h_name__267ABA7A", "attend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<attend>("MeetingModel.FK__attend__h_name__267ABA7A", "attend", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="Meeting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Meeting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Meeting 对象。
        /// </summary>
        /// <param name="m_id">m_id 属性的初始值。</param>
        /// <param name="m_name">m_name 属性的初始值。</param>
        /// <param name="begin_time">begin_time 属性的初始值。</param>
        /// <param name="m_city">m_city 属性的初始值。</param>
        /// <param name="m_street">m_street 属性的初始值。</param>
        public static Meeting CreateMeeting(global::System.Int32 m_id, global::System.String m_name, global::System.DateTime begin_time, global::System.String m_city, global::System.String m_street)
        {
            Meeting meeting = new Meeting();
            meeting.m_id = m_id;
            meeting.m_name = m_name;
            meeting.begin_time = begin_time;
            meeting.m_city = m_city;
            meeting.m_street = m_street;
            return meeting;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 m_id
        {
            get
            {
                return _m_id;
            }
            set
            {
                if (_m_id != value)
                {
                    Onm_idChanging(value);
                    ReportPropertyChanging("m_id");
                    _m_id = StructuralObject.SetValidValue(value, "m_id");
                    ReportPropertyChanged("m_id");
                    Onm_idChanged();
                }
            }
        }
        private global::System.Int32 _m_id;
        partial void Onm_idChanging(global::System.Int32 value);
        partial void Onm_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String m_name
        {
            get
            {
                return _m_name;
            }
            set
            {
                Onm_nameChanging(value);
                ReportPropertyChanging("m_name");
                _m_name = StructuralObject.SetValidValue(value, false, "m_name");
                ReportPropertyChanged("m_name");
                Onm_nameChanged();
            }
        }
        private global::System.String _m_name;
        partial void Onm_nameChanging(global::System.String value);
        partial void Onm_nameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String theme
        {
            get
            {
                return _theme;
            }
            set
            {
                OnthemeChanging(value);
                ReportPropertyChanging("theme");
                _theme = StructuralObject.SetValidValue(value, true, "theme");
                ReportPropertyChanged("theme");
                OnthemeChanged();
            }
        }
        private global::System.String _theme;
        partial void OnthemeChanging(global::System.String value);
        partial void OnthemeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime begin_time
        {
            get
            {
                return _begin_time;
            }
            set
            {
                Onbegin_timeChanging(value);
                ReportPropertyChanging("begin_time");
                _begin_time = StructuralObject.SetValidValue(value, "begin_time");
                ReportPropertyChanged("begin_time");
                Onbegin_timeChanged();
            }
        }
        private global::System.DateTime _begin_time;
        partial void Onbegin_timeChanging(global::System.DateTime value);
        partial void Onbegin_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_time
        {
            get
            {
                return _end_time;
            }
            set
            {
                Onend_timeChanging(value);
                ReportPropertyChanging("end_time");
                _end_time = StructuralObject.SetValidValue(value, "end_time");
                ReportPropertyChanged("end_time");
                Onend_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_time;
        partial void Onend_timeChanging(Nullable<global::System.DateTime> value);
        partial void Onend_timeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String m_city
        {
            get
            {
                return _m_city;
            }
            set
            {
                Onm_cityChanging(value);
                ReportPropertyChanging("m_city");
                _m_city = StructuralObject.SetValidValue(value, false, "m_city");
                ReportPropertyChanged("m_city");
                Onm_cityChanged();
            }
        }
        private global::System.String _m_city;
        partial void Onm_cityChanging(global::System.String value);
        partial void Onm_cityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String m_street
        {
            get
            {
                return _m_street;
            }
            set
            {
                Onm_streetChanging(value);
                ReportPropertyChanging("m_street");
                _m_street = StructuralObject.SetValidValue(value, false, "m_street");
                ReportPropertyChanged("m_street");
                Onm_streetChanged();
            }
        }
        private global::System.String _m_street;
        partial void Onm_streetChanging(global::System.String value);
        partial void Onm_streetChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> m_number
        {
            get
            {
                return _m_number;
            }
            set
            {
                Onm_numberChanging(value);
                ReportPropertyChanging("m_number");
                _m_number = StructuralObject.SetValidValue(value, "m_number");
                ReportPropertyChanged("m_number");
                Onm_numberChanged();
            }
        }
        private Nullable<global::System.Int32> _m_number;
        partial void Onm_numberChanging(Nullable<global::System.Int32> value);
        partial void Onm_numberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dept_id
        {
            get
            {
                return _dept_id;
            }
            set
            {
                Ondept_idChanging(value);
                ReportPropertyChanging("dept_id");
                _dept_id = StructuralObject.SetValidValue(value, true, "dept_id");
                ReportPropertyChanged("dept_id");
                Ondept_idChanged();
            }
        }
        private global::System.String _dept_id;
        partial void Ondept_idChanging(global::System.String value);
        partial void Ondept_idChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__attend__m_id__25869641", "attend")]
        public EntityCollection<attend> attend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<attend>("MeetingModel.FK__attend__m_id__25869641", "attend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<attend>("MeetingModel.FK__attend__m_id__25869641", "attend", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__Meeting__dept_id__1CF15040", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("MeetingModel.FK__Meeting__dept_id__1CF15040", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("MeetingModel.FK__Meeting__dept_id__1CF15040", "Department").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("MeetingModel.FK__Meeting__dept_id__1CF15040", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("MeetingModel.FK__Meeting__dept_id__1CF15040", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__agenda__m_id__1FCDBCEB", "agenda")]
        public EntityCollection<agenda> agenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<agenda>("MeetingModel.FK__agenda__m_id__1FCDBCEB", "agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<agenda>("MeetingModel.FK__agenda__m_id__1FCDBCEB", "agenda", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="Orduser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orduser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Orduser 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="e_mail">e_mail 属性的初始值。</param>
        public static Orduser CreateOrduser(global::System.Int32 id, global::System.String e_mail)
        {
            Orduser orduser = new Orduser();
            orduser.id = id;
            orduser.e_mail = e_mail;
            return orduser;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, true, "gender");
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String e_mail
        {
            get
            {
                return _e_mail;
            }
            set
            {
                One_mailChanging(value);
                ReportPropertyChanging("e_mail");
                _e_mail = StructuralObject.SetValidValue(value, false, "e_mail");
                ReportPropertyChanged("e_mail");
                One_mailChanged();
            }
        }
        private global::System.String _e_mail;
        partial void One_mailChanging(global::System.String value);
        partial void One_mailChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingModel", "FK__attend__particip__24927208", "attend")]
        public EntityCollection<attend> attend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<attend>("MeetingModel.FK__attend__particip__24927208", "attend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<attend>("MeetingModel.FK__attend__particip__24927208", "attend", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingModel", Name="Supadmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supadmin : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Supadmin 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="psw">psw 属性的初始值。</param>
        public static Supadmin CreateSupadmin(global::System.Int32 id, global::System.String psw)
        {
            Supadmin supadmin = new Supadmin();
            supadmin.id = id;
            supadmin.psw = psw;
            return supadmin;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String psw
        {
            get
            {
                return _psw;
            }
            set
            {
                OnpswChanging(value);
                ReportPropertyChanging("psw");
                _psw = StructuralObject.SetValidValue(value, false, "psw");
                ReportPropertyChanged("psw");
                OnpswChanged();
            }
        }
        private global::System.String _psw;
        partial void OnpswChanging(global::System.String value);
        partial void OnpswChanged();

        #endregion

    }

    #endregion

}
