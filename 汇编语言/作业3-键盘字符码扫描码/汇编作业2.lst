Microsoft (R) Macro Assembler Version 6.11		    09/13/16 17:06:36
tempfile.asm						     Page 1 - 1


				.model small
				.stack 200h
 0000				.data	
 0000				.code
				    
 0000				start:

 0000  B7 00			   mov bh,0  
 0002  B6 00			   mov dh,00h     ;第0列，从左到右为列
 0004  B2 00			   mov dl,0h      ;第0行，从上到下为行
 0006  B4 02			   mov ah,02h     ;下面2句是设定光标位置的，参数由DH:DL决定
 0008  CD 10			   int 10h        ;可以修改DH:DL的值查看光标的效果
				   
 000A  B8 0000			   mov ax,0h
				   
 000D  B4 02			   mov ah,02h     ;检测此时键盘特殊键的状态
 000F  CD 16			   int 16h
 0011  3C 00			   cmp al,0h      ;比较是否有特殊键的按下
 0013  75 08			   jnz step1
 0015  B4 01			   mov ah,01h     ;这两行监测此时是否有普通键按下
 0017  CD 16			   int 16h
 0019  75 02			   jnz step1
 001B  EB E3			   jmp start      ;若没有按ESC键，则跳到开始重新执行

 001D				step1:
 001D  3D 011B			   cmp ax,011bh
 0020  74 2C			   jz exit
				    
 0022  8A DC			   mov bl,ah         ;防止Ah的数据丢失
				    
 0024  B5 02			   mov ch,02h
				 
 0026				s:
 0026  51			   push cx           ;cx入栈
 0027  B5 02			   mov ch,02h   
				    
 0029				step2:               ;为了方便，假设AL=31H，AH=02H
 0029  B1 04			   mov cl,04h
 002B  D2 C0			   rol al,cl         ;把AL循环左移4位，也就是AL的高4位和低4位位置调
				    
 002D  50			   push ax
 002E  24 0F			   and al,0fh        ;高4位清零  AL=03H
 0030  04 30			   add al,30h       
				   
 0032  3C 3A			   cmp al,3ah        ;ASCII码3AH表示:，它前面的是0~9的ASCII码
 0034  72 02			   jb  step3         ;小于3AH则打印，也就是如果是数字就打印数字0~9
 0036  04 07			   add al,07h        ;若不是数字，AL=AL+7，就是打印A~F

 0038				step3:
 0038  B4 0E			   mov ah,0eh        ;这两句是把AL里面的数据显示到屏幕，每显示一个字右移一格
 003A  CD 10			   int 10h           ;AL=33H 也就是显示3，光标右移一格	
 003C  58			   pop ax 
				    
 003D  FE CD			   dec ch
 003F  75 E8			   jnz step2         ;循环显示下一位
				    
 0041  8A C3			   mov al,bl         ;把前面保存到BL的扫描码存到AL，然后打印出来
 0043  59			   pop cx
 0044  FE CD			   dec ch
 0046  75 DE			   jnz s
 0048  B4 00			   MOV AH,0H         ;防止不断重复
 004A  CD 16			   INT 16H
 004C  EB B2			   jmp start
				       
 004E				 exit:   
				 
				 
 004E  B4 4C			   mov ah,4ch
 0050  CD 21			   int 21h

				end start

Microsoft (R) Macro Assembler Version 6.11		    09/13/16 17:06:36
tempfile.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0200	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 0052	  Word	  Public  'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
exit . . . . . . . . . . . . . .	L Near	 004E	  _TEXT	
start  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
step1  . . . . . . . . . . . . .	L Near	 001D	  _TEXT	
step2  . . . . . . . . . . . . .	L Near	 0029	  _TEXT	
step3  . . . . . . . . . . . . .	L Near	 0038	  _TEXT	
s  . . . . . . . . . . . . . . .	L Near	 0026	  _TEXT	

	   0 Warnings
	   0 Errors
